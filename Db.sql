/*Eliminar Vistas*/

DROP VIEW SESSION_START;

DROP VIEW PRODUCT_DETAIL;

DROP VIEW PRODUCT_LIST;

DROP VIEW PRODUCT_LIST_MANAGEMENT;

DROP VIEW DIRECTIONS_LIST_MANAGEMENT;

DROP VIEW PAYS_LIST_MANAGEMENT;

DROP VIEW PRODUCT_INDIVIDUAL;

DROP VIEW DIRECTIONS_LIST_MANAGEMENT;

/*Eliminar Tablas*/

DROP TABLE USERS;

DROP TABLE PRODUCTS;

DROP TABLE PAYS;

DROP TABLE DIRECTIONS;

DROP TABLE TRANSACTIONS;

DROP TABLE TRANSACTIONPRODUCT;

/*Eliminar Secuencias*/

DROP SEQUENCE USERS_SEQ;

DROP SEQUENCE PRODUCTS_SEQ;

DROP SEQUENCE DIRECTIONS_SEQ;

DROP SEQUENCE PAYS_SEQ;

DROP SEQUENCE TRANSACTIONS_SEQ;

DROP SEQUENCE TRPR_SEQ;

/*Crear Tablas*/

CREATE TABLE USERS (
    ID              NUMBER NOT NULL,
    ACTIVE          NUMBER(1) NOT NULL,
    CODE            VARCHAR2(200) NOT NULL,
    NAME            VARCHAR2(200) NOT NULL,
    SURNAME         VARCHAR2(250) NOT NULL,
    BIRTHDATE       DATE NOT NULL,
    GENRE           VARCHAR2(200) NOT NULL,
    PHONE           NUMBER NOT NULL,
    EMAIL           VARCHAR2(200) NOT NULL,
    PASSWORD        VARCHAR2(200) NOT NULL,
    IMAGE           VARCHAR2(200) NOT NULL,
    CREATED_AT      DATE NOT NULL,
    CONSTRAINT users_pk PRIMARY KEY (ID)
);

CREATE TABLE PRODUCTS (
    ID              NUMBER NOT NULL,
    USER_ID         NUMBER NOT NULL,
    ACTIVE          NUMBER(1) NOT NULL,
    NAME            VARCHAR2(200) NOT NULL,
    PRICE           NUMBER NOT NULL,
    UNITS           NUMBER NOT NULL,
    CONTENT         VARCHAR2(200) NOT NULL,
    STOCK           NUMBER NOT NULL,
    DESCRIPTION     VARCHAR2(200) NOT NULL,
    IMAGE           VARCHAR2(200) NOT NULL,
    CREATED_AT      DATE NOT NULL,
    CONSTRAINT products_pk PRIMARY KEY (ID),
    CONSTRAINT products_user_fk FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE PAYS (
    ID              NUMBER NOT NULL,
    USER_ID         NUMBER NOT NULL,
    ACTIVE          NUMBER(1) NOT NULL,
    ELECTION        VARCHAR2(200) NOT NULL,
    NUMBER_ELECTION NUMBER NOT NULL,
    CREATED_AT      DATE NOT NULL,
    CONSTRAINT pays_pk PRIMARY KEY (ID),
    CONSTRAINT pays_user_fk FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE DIRECTIONS (
    ID              NUMBER NOT NULL,
    USER_ID         NUMBER NOT NULL,
    ACTIVE          NUMBER(1) NOT NULL,
    CARRER          VARCHAR2(200) NOT NULL,
    STREET          VARCHAR2(250) NOT NULL,
    POSTAL_CODE     NUMBER NOT NULL,
    DIRECTION       VARCHAR2(200) NOT NULL,
    CREATED_AT      DATE NOT NULL,
    CONSTRAINT directions_pk PRIMARY KEY (ID),
    CONSTRAINT directions_user_fk FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE TRANSACTIONS (
    ID                NUMBER NOT NULL,
    NUMBER_BILL     NUMBER NOT NULL,
    ID_BUYER       NUMBER NOT NULL,
    ID_DIRECTION           NUMBER NOT NULL,
    ID_PAY           NUMBER NOT NULL,
    TOTAL             NUMBER NOT NULL,
    DATE_TIME  DATE NOT NULL,
    CREATED_AT      DATE NOT NULL,
    CONSTRAINT shops_pk PRIMARY KEY (ID),
    CONSTRAINT tr_buyer_fk FOREIGN KEY (ID_BUYER) REFERENCES USERS (ID),
    CONSTRAINT tr_direction_fk FOREIGN KEY (ID_DIRECTION) REFERENCES PAYS (ID),
    CONSTRAINT tr_pay_fk FOREIGN KEY (ID_PAY) REFERENCES DIRECTIONS (ID)
);

CREATE TABLE TRANSACTIONPRODUCT (
    ID                  NUMBER NOT NULL,
    ID_TRANSACTION      NUMBER NOT NULL,
    ID_PRODUCT       NUMBER NOT NULL,
    ID_SELLER        NUMBER NOT NULL,
    UNITS            NUMBER NOT NULL,
    CREATED_AT      DATE NOT NULL,
    CONSTRAINT trpr_pk PRIMARY KEY ( id ),
    CONSTRAINT trpr_transaction_fk FOREIGN KEY (ID_TRANSACTION) REFERENCES TRANSACTIONS (ID),
    CONSTRAINT trpr_product_fk FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTS (ID),
    CONSTRAINT trpr_user_fk FOREIGN KEY (ID_SELLER) REFERENCES USERS (ID)
);

/*Crear Secuencias*/

CREATE SEQUENCE USERS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE PRODUCTS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE PAYS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE DIRECTIONS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE TRANSACTIONS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE TRPR_SEQ
START WITH 1
INCREMENT BY 1;

/*Crear Triggers*/

CREATE OR REPLACE TRIGGER USERS_TRG
BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT EDUARDED.USERS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
END;

CREATE OR REPLACE TRIGGER PRODUCTS_TRG
BEFORE INSERT ON PRODUCTS
FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT EDUARDED.PRODUCTS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
END;

CREATE OR REPLACE TRIGGER PAYS_TRG
BEFORE INSERT ON PAYS
FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT EDUARDED.PAYS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
END;

CREATE OR REPLACE TRIGGER DIRECTIONS_TRG
BEFORE INSERT ON DIRECTIONS
FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT EDUARDED.DIRECTIONS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
END;

CREATE OR REPLACE TRIGGER TRANSACTIONS_TRG
BEFORE INSERT ON TRANSACTIONS
FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT EDUARDED.TRANSACTIONS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
END;

CREATE OR REPLACE TRIGGER TRPR_TRG
BEFORE INSERT ON TRANSACTIONPRODUCT
FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT EDUARDED.TRPR_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
END;

/*Crear o Reemplazar Vistas*/

CREATE OR REPLACE VIEW SESSION_START AS
SELECT ID, ACTIVE, CODE, NAME, SURNAME, PHONE, EMAIL, PASSWORD, IMAGE
FROM users;

CREATE OR REPLACE VIEW PRODUCT_DETAIL AS
SELECT ID, NAME, PRICE, UNITS, CONTENT, STOCK, DESCRIPTION, IMAGE
FROM products;

CREATE OR REPLACE VIEW PRODUCT_LIST AS
SELECT ID, ACTIVE, NAME, PRICE, IMAGE
FROM products;

CREATE OR REPLACE VIEW PRODUCT_LIST_MANAGEMENT AS
SELECT ID, ACTIVE, NAME, PRICE, UNITS, CONTENT, STOCK
FROM products;

CREATE OR REPLACE VIEW DIRECTIONS_LIST_MANAGEMENT AS
SELECT ID, ACTIVE, CARRER, STREET, POSTAL_CODE, DIRECTION 
FROM directions;

CREATE OR REPLACE VIEW PAYS_LIST_MANAGEMENT AS
SELECT ID, ACTIVE, ELECTION, NUMBER_ELECTION
FROM pays;